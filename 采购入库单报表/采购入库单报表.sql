WITH material AS
(
SELECT a.*,
b.FNAME AS 'LEVEL_3',
c.FNAME AS 'LEVEL_2'
FROM
	(SELECT a.FMATERIALID,a.FNUMBER,a.FMATERIALGROUP,a.FOLDNUMBER,a.FMNEMONICCODE,a.F_CGY AS ZXCG,a.KFCGY AS KFCG,
	b.FNAME,b.FSPECIFICATION,
	c.FNUMBER AS 'LEVELNUM_3',
	d.FID AS 'LEVELID_2',d.FNUMBER AS 'LEVELNUM_2'
	FROM T_BD_MATERIAL a INNER JOIN T_BD_MATERIAL_L b ON a.FMATERIALID = b.FMATERIALID
	LEFT JOIN T_BD_MATERIALGROUP c ON a.FMATERIALGROUP = c.FID
	LEFT JOIN T_BD_MATERIALGROUP d ON c.FPARENTID = d.FID
	) a
LEFT JOIN T_BD_MATERIALGROUP_L b ON a.FMATERIALGROUP = b.FID
LEFT JOIN T_BD_MATERIALGROUP_L c ON a.LEVELID_2 = c.FID
),
-- INSTOCKENTRY -- 税率 -- 费用明细
intoStockentry AS
(SELECT a.FID,a.FMATERIALID,a.FUNITID,a.FREALQTY,a.FLOT,a.FSTOCKID,a.FSTOCKLOCID,a.FGIVEAWAY,a.F_BWBPRICE,a.FENTRYID,a.FAUXPROPID,a.F_QQQQ_CWYFPRICE,a.F_STYZ_CWYFQTY,a.FBASERETURNJOINQTY,
b.FPRICE,b.FAMOUNT,b.FENTRYID AS PRICE_ENTRY,b.FTAXRATE
-- c.FBILLAMOUNT,c.FSETTLECURRID,c.FEXCHANGERATE
FROM T_STK_INSTOCKENTRY a INNER JOIN T_STK_INSTOCKENTRY_F b ON a.FENTRYID=b.FENTRYID
LEFT JOIN T_STK_INSTOCKFIN c ON a.FID = b.FID),
-- MATERIAL + INSTOCKENTRY 物料 + 入库单明细
M_I	AS
(
SELECT a.FID,a.FUNITID,a.FREALQTY,a.FLOT,a.FSTOCKID,a.FSTOCKLOCID,a.FGIVEAWAY,a.F_BWBPRICE,a.FENTRYID,a.FPRICE,a.FAMOUNT,a.FAUXPROPID,a.PRICE_ENTRY,a.F_QQQQ_CWYFPRICE,a.F_STYZ_CWYFQTY,a.FBASERETURNJOINQTY,
b.FMATERIALID,b.FNUMBER,b.FOLDNUMBER,b.FMNEMONICCODE,b.FNAME,b.FSPECIFICATION,b.LEVELNUM_2,b.LEVEL_2,b.LEVELNUM_3,b.LEVEL_3,b.ZXCG,b.KFCG
FROM (SELECT * FROM intoStockentry) a LEFT JOIN (SELECT * FROM material) b ON a.FMATERIALID = b.FMATERIALID
-- WHERE b.FNUMBER = '05.01.0002.00005'
),
-- 部门组织
Depart AS(
SELECT DISTINCT b.FDEPTID,b.FNAME AS 'DEPARTMENTS'
FROM T_BD_DEPARTMENT_L b
),
Org AS(
SELECT DISTINCT a.FORGID,a.FNAME AS 'ORGANIZATONS'
FROM T_ORG_ORGANIZATIONS_L a
),
-- 单据编码转换 -- 1 长信科技 -- 1023786 赣州德普特 -- 1431804 长信新显
instock AS
(
SELECT b.FNAME AS 'FBILLTYPE',
a.FID,-- a.FSUPPLIERID,
a.FBILLNO,c.FNAME AS 'FSUPPLIER',
d.DEPARTMENTS AS 'FSTOCKDEPT',
e.ORGANIZATONS AS 'FPURCHASEORG',
f.ORGANIZATONS AS 'FDEMANDORG',
g.FNAME AS 'FPURCHASERNAME',
a.FSTOCKDEPTID,a.FDEMANDORGID,a.FPURCHASEORGID,
a.F_KING_ZXCG,a.F_KING_KFCG,a.FDATE,a.FDOCUMENTSTATUS
FROM T_STK_INSTOCK a
LEFT JOIN T_BAS_BILLTYPE_L b ON a.FBILLTYPEID = b.FBILLTYPEID
LEFT JOIN T_BD_SUPPLIER_L c ON a.FSUPPLIERID = c.FSUPPLIERID
LEFT JOIN Depart d ON a.FSTOCKDEPTID = d.FDEPTID
LEFT JOIN Org e ON a.FPURCHASEORGID = e.FORGID
LEFT JOIN Org f ON a.FDEMANDORGID = f.FORGID
LEFT JOIN V_BD_BUYER_L g ON a.FPURCHASERID = g.FID
WHERE b.FLOCALEID = '2052'
--AND a.FPURCHASEORGID IN ('1','1023786','1431804')
AND a.FPURCHASEORGID IN (${采购组织})
-- AND a.FDEMANDORGID IN ('100329','100330','100331')
 AND a.FDEMANDORGID IN (${需求组织})
),
-- MI + INSTOCK
MII AS
(
SELECT DISTINCT a.*,
b.FREALQTY,b.FGIVEAWAY,b.F_BWBPRICE,b.FENTRYID,b.FPRICE,b.FAMOUNT,b.FAUXPROPID,
b.FMATERIALID,b.FNUMBER,b.FOLDNUMBER,b.FMNEMONICCODE,b.FNAME,b.FSPECIFICATION,b.FUNITID,
b.LEVELNUM_2,b.LEVEL_2,b.LEVELNUM_3,b.LEVEL_3,b.ZXCG,b.KFCG,b.F_QQQQ_CWYFPRICE,b.F_STYZ_CWYFQTY,b.FBASERETURNJOINQTY,
c.FNAME AS 'FSTOCK',
d.FNAME AS 'FSTOCKLOC',
e.FNAME AS 'FUNIT',
f.FNAME AS 'FLOT'
FROM  instock a LEFT JOIN M_I b ON a.FID = b.FID
LEFT JOIN T_BD_STOCK_L c ON b.FSTOCKID = c.FSTOCKID
LEFT JOIN V_BAS_FLEXVALUESENTRY_L d ON b.FSTOCKLOCID = d.FENTRYID
LEFT JOIN (SELECT DISTINCT FUNITID,FNAME FROM T_BD_UNIT_L WHERE FLOCALEID = '2052') e ON b.FUNITID = e.FUNITID
LEFT JOIN T_BD_LOTMASTER_L f ON b.FLOT = f.FLOTID
WHERE a.FDOCUMENTSTATUS = 'C'
AND a.FDATE > '${开始时间}'
AND a.FDATE < '${结束时间}'
),


-- 所有入库单根据 入库日期 供应商 采购组织 靶材/辅助属性 进行分组 并选出每一年的最后一单，即业内编码最大的一单
WholePriceLast AS
(
SELECT DISTINCT
a.FNUMBER,a.FSUPPLIER,a.FPURCHASEORG,a.FAUXPROPID,a.MAX_PRICE_ENTRY,a.MIN_PRICE_ENTRY,a.PL_YEAR,
MONTH(b.FDATE) AS 'LASTMONTH',b.FPRICE AS 'LASTPRICE',
c.FBILLAMOUNT AS 'LASTAMOUNT',c.FEXCHANGERATE AS 'LASTEXRATE',
MONTH(bb.FDATE) AS 'THATMONTH',bb.FPRICE AS 'THATPRICE',
d.FBILLAMOUNT AS 'THATAMOUNT',d.FEXCHANGERATE AS 'THATEXRATE'
FROM
(
			SELECT DISTINCT a.FSUPPLIER,a.FPURCHASEORG,b.FAUXPROPID,
			YEAR(a.FDATE) AS PL_YEAR,MAX(a.FDATE) AS MAX_FDATE,MIN(a.FDATE) AS MIN_FDATE,
			b.FNUMBER,MAX(b.PRICE_ENTRY) AS 'MAX_PRICE_ENTRY',
			MIN(b.PRICE_ENTRY) AS 'MIN_PRICE_ENTRY'
			FROM instock a LEFT JOIN M_I b ON a.FID = b.FID
			WHERE a.FDOCUMENTSTATUS = 'C'
			AND YEAR(a.FDATE) >= YEAR('${开始时间}') - 1
			AND YEAR(a.FDATE) <= YEAR('${结束时间}')
			GROUP BY b.FNUMBER,YEAR(a.FDATE),a.FSUPPLIER,a.FPURCHASEORG,b.FAUXPROPID
) a
LEFT JOIN
(
			SELECT DISTINCT a.FID,a.FSUPPLIER,a.FPURCHASEORG,a.FDATE,
			b.FNUMBER,b.PRICE_ENTRY,b.FPRICE
			FROM instock a LEFT JOIN M_I b ON a.FID = b.FID
			WHERE a.FDOCUMENTSTATUS = 'C'
-- 			AND b.FNUMBER = '04.02.0039.00004'
) b
ON a.MAX_PRICE_ENTRY = b.PRICE_ENTRY
LEFT JOIN
(
			SELECT DISTINCT a.FID,a.FSUPPLIER,a.FPURCHASEORG,a.FDATE,
			b.FNUMBER,b.PRICE_ENTRY,b.FPRICE
			FROM instock a INNER JOIN M_I b ON a.FID = b.FID
			WHERE a.FDOCUMENTSTATUS = 'C'
) bb
ON a.MIN_PRICE_ENTRY = bb.PRICE_ENTRY
LEFT JOIN
T_STK_INSTOCKFIN c ON b.FID = c.FID
LEFT JOIN
T_STK_INSTOCKFIN d ON bb.FID = d.FID
),

-- 选出每个物料编码前一年的最后一单的单价 -- 若为空则选出当年的首单
LastPrice AS (
SELECT DISTINCT a.*,
CASE WHEN b.PL_YEAR IS NOT NULL THEN b.PL_YEAR
	ELSE c.PL_YEAR
END AS 'PL_YEAR',
CASE WHEN b.LASTMONTH IS NOT NULL THEN b.LASTMONTH
	ELSE c.THATMONTH
END AS 'BASEMONTH',
CASE WHEN b.LASTPRICE IS NOT NULL THEN b.LASTPRICE
	ELSE c.THATPRICE
END AS 'BASEPRICE',
CASE WHEN b.LASTAMOUNT IS NOT NULL THEN b.LASTAMOUNT
	ELSE c.THATAMOUNT
END AS 'BASEAMOUNT',
CASE WHEN b.LASTEXRATE IS NOT NULL THEN b.LASTEXRATE
	ELSE c.THATEXRATE
END AS 'BASEEXRATE'
FROM MII a
LEFT JOIN (
SELECT b.FNUMBER,b.FSUPPLIER,b.FPURCHASEORG,b.FAUXPROPID,b.PL_YEAR,b.LASTMONTH,b.LASTPRICE,b.LASTAMOUNT,b.LASTEXRATE
FROM WholePriceLast b
-- WHERE b.PL_YEAR < YEAR('2023-10-01 00:00:00')
WHERE b.PL_YEAR < YEAR('${结束时间}')
) b ON a.FNUMBER = b.FNUMBER
AND YEAR(a.FDATE) = b.PL_YEAR + 1
AND a.FSUPPLIER = b.FSUPPLIER
AND a.FAUXPROPID = b.FAUXPROPID
LEFT JOIN (
SELECT c.FNUMBER,c.FSUPPLIER,c.FPURCHASEORG,c.FAUXPROPID,c.PL_YEAR,c.THATMONTH,c.THATPRICE,c.THATAMOUNT,c.THATEXRATE
FROM WholePriceLast c
-- WHERE c.PL_YEAR >= YEAR('2023-09-01 00:00:00')
WHERE c.PL_YEAR >= YEAR('${开始时间}')
) c ON a.FNUMBER = c.FNUMBER
AND YEAR(a.FDATE) = c.PL_YEAR
AND a.FSUPPLIER = c.FSUPPLIER
AND a.FAUXPROPID = c.FAUXPROPID
),

-- 靶材尺寸
TARGET AS(
SELECT a.FID,
b.FDATAVALUE
FROM T_BD_FLEXSITEMDETAILV a LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L b ON a.FF100005 = b.FENTRYID),
-- 品牌属性
AUX AS(
SELECT a.FID,
b.FDATAVALUE
FROM T_BD_FLEXSITEMDETAILV a LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L b ON a.FF100006 = b.FENTRYID),
-- 辅助属性
MIITA AS(
SELECT a.*,
b.FDATAVALUE AS '靶材尺寸',
c.FDATAVALUE AS '品牌属性'
FROM (SELECT * FROM LastPrice) a
LEFT JOIN (SELECT * FROM TARGET) b ON a.FAUXPROPID = b.FID
LEFT JOIN (SELECT * FROM AUX) c ON a.FAUXPROPID = c.FID
),
-- 采购价目表创建人 -- 采购价目表 -- A为未禁用
PriceList AS
(
SELECT DISTINCT
a.FNUMBER,
a.FUSEORGID,
e.FNAME AS PL_SUPPLIER,
d.FNAME AS CREATOR
FROM T_BD_MATERIAL a
LEFT JOIN T_PUR_PRICELISTENTRY b ON a.FMATERIALID = b.FMATERIALID
LEFT JOIN T_PUR_PRICELIST c ON b.FID = c.FID
LEFT JOIN T_BD_SUPPLIER_L e ON c.FSUPPLIERID = e.FSUPPLIERID
LEFT JOIN T_SEC_USER d ON c.FCREATORID = d.FUSERID
WHERE c.FFORBIDSTATUS = 'A'
AND b.FDISABLESTATUS = 'B'
AND c.FDOCUMENTSTATUS = 'C'
AND c.FEXPIRYDATE > GETDATE()
AND d.FNAME IS NOT NULL
),
CREATORS AS
(
SELECT a.FNUMBER,a.FUSEORGID,a.PL_SUPPLIER,b.CREATOR,a.CreatorCount
FROM(
SELECT a.FNUMBER,a.FUSEORGID,a.PL_SUPPLIER,COUNT(a.CREATOR) AS CreatorCount
FROM PriceList a
GROUP BY a.FNUMBER,a.FUSEORGID,a.PL_SUPPLIER) a
LEFT JOIN PriceList b ON a.FNUMBER = b.FNUMBER AND a.FUSEORGID = b.FUSEORGID AND a.PL_SUPPLIER = b.PL_SUPPLIER
WHERE a.CreatorCount > 1
),
PriceCreator AS
(
SELECT a.FNUMBER,a.FUSEORGID,a.PL_SUPPLIER,
			 CREATORS = STUFF((SELECT ',' + b.CREATOR
			 FROM CREATORS b
			 WHERE a.FNUMBER = b.FNUMBER AND a.FUSEORGID = b.FUSEORGID AND a.PL_SUPPLIER = b.PL_SUPPLIER
			 FOR xml path('')), 1, 1, '')
FROM CREATORS a
-- WHERE a.FNUMBER IN ('04.07.0000.00017')
GROUP BY a.FNUMBER,a.FUSEORGID,a.PL_SUPPLIER
),
PriceCreators AS
(
SELECT a.FNUMBER,a.FUSEORGID,a.PL_SUPPLIER,
(CASE WHEN a.FNUMBER = b.FNUMBER AND a.FUSEORGID = b.FUSEORGID AND a.PL_SUPPLIER = b.PL_SUPPLIER THEN b.CREATORS
	ELSE a.CREATOR
END) AS FCREATORS
FROM PriceList a
LEFT JOIN PriceCreator b
ON a.FNUMBER = b.FNUMBER AND a.FUSEORGID = b.FUSEORGID AND a.PL_SUPPLIER = b.PL_SUPPLIER
),
MIITAP AS(
SELECT DISTINCT a.*,
d.FCREATORS AS '价目表创建人'
FROM MIITA a
LEFT JOIN (SELECT * FROM PriceCreators) d
ON a.FNUMBER = d.FNUMBER AND a.FPURCHASEORGID = d.FUSEORGID AND a.FSUPPLIER = d.PL_SUPPLIER
-- WHERE a.FNUMBER = '04.07.0000.00017'
),
-- 费用明细
MIITAA AS(
SELECT a.*,
b.FBILLAMOUNT,b.FEXCHANGERATE,c.FNAME AS 'FSETTLECURRENCY'
FROM MIITAP a LEFT JOIN T_STK_INSTOCKFIN b ON a.FID = b.FID
LEFT JOIN T_BD_CURRENCY_L c ON b.FSETTLECURRID = c.FPKID
)
SELECT
Z.FBILLTYPE AS '单据类型',
Z.FBILLNO	AS '单据编号',
Z.FSUPPLIER	AS '供应商',
Z.FSTOCKDEPT AS '收料部门',
Z.FPURCHASEORG AS '采购组织',
Z.FDEMANDORG AS '需求组织',
Z.FPURCHASERNAME AS '采购员',
Z.ZXCG AS '执行采购员',
Z.KFCG AS '开发采购员',
Z.FDATE AS '入库日期',
MONTH(Z.FDATE) AS '月份',
DATENAME(QUARTER,Z.FDATE) AS '季度',
Z.价目表创建人,
Z.FUNIT AS '库存单位',
Z.FLOT AS '批号',
Z.FSTOCK AS '仓库',
Z.FSTOCKLOC AS '仓位',
Z.FGIVEAWAY AS '是否赠品',
Z.FPRICE AS '单价',
Z.FAMOUNT AS '金额',
Z.FNUMBER AS '物料编码',
Z.LEVELNUM_2 AS '二级物料编码',
Z.LEVEL_2 AS '二级物料名称',
Z.LEVELNUM_3 AS '三级物料编码',
Z.LEVEL_3 AS '三级物料名称',
Z.FOLDNUMBER AS '旧物料编码',
Z.FMNEMONICCODE AS '助记码',
Z.FNAME AS '物料名称',
Z.FSPECIFICATION AS '规格型号',
Z.靶材尺寸,
Z.品牌属性,
Z.FREALQTY AS '实收数量',
Z.FBASERETURNJOINQTY AS '退料关联数量(库存基本)',
Z.F_BWBPRICE AS '单价(本位币)',
Z.FBILLAMOUNT AS '金额(本位币)',
Z.FSETTLECURRENCY AS '结算币别',
Z.FEXCHANGERATE AS '汇率',
Z.BASEAMOUNT AS '原汇率金额(本位币)',
Z.BASEEXRATE AS '原汇率',
Z.BASEPRICE AS '基价(上年度最后一次入库单单价|今年首单单价)',
Z.PL_YEAR AS '基价年份',
Z.BASEMONTH AS '基价今年月份',
Z.F_QQQQ_CWYFPRICE AS '对账改价 = 单价本位币(财务应付)',
Z.F_STYZ_CWYFQTY AS '对账改价数量 = 数量(财务应付)',


(Z.FREALQTY - Z.FBASERETURNJOINQTY) * Z.F_BWBPRICE AS '金额(本位币)* = (入库数量-退料关联数量)* 单价本位币',
Z.FPRICE * Z.BASEEXRATE * Z.FREALQTY AS '原汇率金额(本位币)* = 原汇率单价 * 数量',
Z.FPRICE * Z.BASEEXRATE AS '原汇率单价 = 单价 * 汇率',
Z.BASEPRICE * Z.FREALQTY AS '基价采购额 = 基价 * 实收数量',
(Z.BASEPRICE * Z.FREALQTY) - Z.FBILLAMOUNT AS '降额 = 基价采购额 - 金额(本位币)',
CASE WHEN (Z.BASEPRICE * Z.FREALQTY) <> 0 THEN ((Z.BASEPRICE * Z.FREALQTY) - Z.FBILLAMOUNT)/(Z.BASEPRICE * Z.FREALQTY)
	ELSE NULL
END AS '降幅 = 降额/基价采购额',

(Z.BASEPRICE * Z.FREALQTY) - Z.BASEAMOUNT AS '原汇率降额 = 基价采购额 - 原汇率金额(本位币)',
CASE WHEN Z.FPRICE * Z.BASEEXRATE * Z.FREALQTY <> 0 THEN ((Z.BASEPRICE * Z.FREALQTY)-Z.BASEAMOUNT)/(Z.FPRICE * Z.BASEEXRATE * Z.FREALQTY)
	ELSE NULL
END AS '原汇率降幅* = 原汇率降额/原汇率-金额(本位币)'
FROM MIITAA Z